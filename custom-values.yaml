#
# NOTE:
# - This is intended to be a `custom-values.yaml` starting point for non-production deployment (like minikube)

# External Dependencies:
# - A PUBLIC git repo for DAGs: ssh://git@repo.example.com:my-airflow-dags.git
#

###################################
# Airflow - Common Configs
###################################
airflow:
  image:
    repository: apache/airflow
    tag: 1.10.12-python3.8
  ## the airflow executor type to use
  ##
  executor: CeleryExecutor

  ## the fernet key used to encrypt the connections in the database
  ##
  â„–fernetKey: "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc="

  ## environment variables for the web/scheduler/worker Pods (for airflow configs)
  ##
  config:
    AIRFLOW__CORE__DEFAULT_TIMEZONE: "Europe/Moscow"
    # Security
    AIRFLOW__CORE__SECURE_MODE: "True"

    AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.deny_all"

    AIRFLOW__WEBSERVER__AUTH_BACKEND: "airflow.contrib.auth.backends.ldap_auth"
    AIRFLOW__WEBSERVER__AUTHENTICATE: "True"
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "False"
    AIRFLOW__WEBSERVER__RBAC: "False"

 ## Ldap part start
    AIRFLOW__CORE__LOGGING_LEVEL: "DEBUG"
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"


    AIRFLOW__LDAP__URI: "ldaps://ldaps1.companyname.ycloud"
    AIRFLOW__LDAP__USER_FILTER: "objectClass=*"
    AIRFLOW__LDAP__USER_NAME_ATTR: "uid"
    AIRFLOW__LDAP__GROUP_MEMBER_ATTR: "memberOf"

    AIRFLOW__LDAP__SUPERUSER_FILTER: "memberOf=cn=admins,cn=groups,cn=accounts,dc=companyname,dc=ycloud"
    AIRFLOW__LDAP__DATA_PROFILER_FILTER: "memberOf=cn=airflow,cn=groups,cn=accounts,dc=companyname,dc=ycloud"

    AIRFLOW__LDAP__BIND_USER: "uid=airflowservice,cn=sysaccounts,cn=etc,dc=companyname,dc=ycloud"
    #AIRFLOW__LDAP__BIND_PASSWORD: ""
    AIRFLOW__LDAP__BASEDN: "cn=users,cn=compat,dc=companyname,dc=ycloud"
    #AIRFLOW__LDAP__SEARCH_SCOPE: SUBTREE
    AIRFLOW__LDAP__SEARCH_SCOPE: "LEVEL"
    AIRFLOW__LDAP__CACERT: "/etc/ca/ldap_ca.crt"
    AIRFLOW__LDAP__IGNORE_MALFORMED_SCHEMA: "False"

 ## Ldap part finish
  extraConfigmapMounts:
    - name: ca-sert-for-airflow
      mountPath: /etc/ca/ldap_ca.crt
      configMap: ca-sert-for-airflow
      readOnly: true
      subPath: ldap_ca.crt


  extraEnv:
    - name: AIRFLOW__CORE__FERNET_KEY
      valueFrom:
        secretKeyRef:
          name: airflow-fernet-key
          key: value
    - name: AIRFLOW__LDAP__BIND_PASSWORD
      valueFrom:
        secretKeyRef:
          name: airflow-ldap-password
          key: value

  extraPipPackages:
    - "airflow-exporter==1.3.0"
    - "ldap3"
    - "apache-airflow[ldap]"
    # DAGS
#    AIRFLOW__CORE__LOAD_EXAMPLES: "True"

    ## Disable noisy "Handling signal: ttou" Gunicorn log messages
  GUNICORN_CMD_ARGS: "--log-level WARNING"

###################################
# Airflow - Scheduler Configs
###################################
scheduler:
  livenessProbe:
    failureThreshold: 10

  ## custom airflow connections for the airflow scheduler
  ##
#  connections:
#    - id: my_aws
#      type: aws
#      extra: |
#        {
#          "aws_access_key_id": "XXXXXXXXXXXXXXXXXXX",
#          "aws_secret_access_key": "XXXXXXXXXXXXXXX",
#          "region_name":"eu-central-1"
#        }

  ## custom airflow variables for the airflow scheduler
  ##
  variables: |
    { "environment": "dev" }

  ## custom airflow pools for the airflow scheduler
  ##
  pools: |
    {
      "example": {
        "description": "This is an example pool with 2 slots.",
        "slots": 2
      }
    }

###################################
# Airflow - WebUI Configs
###################################
web:
  livenessProbe:
    failureThreshold: 5
  extraPipPackages:
    - "apache-airflow[ldap]"
  ## configs for the Service of the web Pods
  ##
#  service:
#    type: NodePort

###################################
# Airflow - Worker Configs
###################################
workers:
  enabled: true
  celery:
    instances: 5
    gracefullTermination: true
  ## the number of workers Pods to run
  ##
  replicas: 2
  terminationPeriod: 60

###################################
# Airflow - DAGs Configs
###################################
dags:
  ## configs for the DAG git repository & sync container
  ##
  git:
    ## url of the git repository
    ##
    url: "https://github.com/Delphin1/airflow-dags.git"

    ## the branch/tag/sha1 which we clone
    ##
    ref: master

    ## the name of a pre-created secret containing files for ~/.ssh/
    ##
    ## NOTE:
    ## - this is ONLY RELEVANT for SSH git repos
    ## - the secret commonly includes files: id_rsa, id_rsa.pub, known_hosts
    ## - known_hosts is NOT NEEDED if `git.sshKeyscan` is true
    ##
    secret: ""

    ## the name of the private key file in your `git.secret`
    ##
    ## NOTE:
    ## - this is ONLY RELEVANT for PRIVATE SSH git repos
    ##
    privateKeyName: id_rsa

    ## the host name of the git repo
    ##
    ## NOTE:
    ## - this is ONLY REQUIRED for SSH git repos
    ##
    ## EXAMPLE:
    ##   repoHost: "github.com"
    ##
    repoHost: "github.com"

    ## the port of the git repo
    ##
    ## NOTE:
    ## - this is ONLY REQUIRED for SSH git repos
    ##
    repoPort: 22

    ## configs for the git-sync container
    ##
    gitSync:
      ## enable the git-sync sidecar container
      ##
      enabled: true

      ## the git sync interval in seconds
      ##
      refreshTime: 60

###################################
# Database - PostgreSQL Chart
###################################
postgresql:
  enabled: true

###################################
# Database - Redis Chart
###################################
redis:
  enabled: true

flower:
  enabled: true

#serviceMonitor:
#  enabled: true

